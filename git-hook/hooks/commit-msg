#!/bin/bash
#
# An example hook script to prepare the commit log message.
# Called by "git commit" with the name of the file that has the
# commit message, followed by the description of the commit
# message's source.  The hook's purpose is to edit the commit
# message file.  If the hook fails with a non-zero status,
# the commit is aborted.
#

JIRA_MATCH='[A-Z][A-Z_0-9]\+-[0-9]\+'

BRANCH_NAME=$(git symbolic-ref --short HEAD)
JIRA_STR=$(echo $BRANCH_NAME |grep -oh $JIRA_MATCH)

COMMIT_EDITMSG="$(cat "$1")"

if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP='^\(master\|develop\|release\|test\)$'
fi

is_branch_empty() {
  if [ -z "$BRANCH_NAME" ]; then 
    echo "Branch name: \"$BRANCH_NAME\" should not be Empty!"
    exit 1
  fi
}

is_branch_excluded() {
  local branch_excluded=$(echo "$BRANCH_NAME" | grep "$BRANCHES_TO_SKIP")
  if [ -n "$branch_excluded" ]; then
    echo "warning: Branch ${BRANCH_NAME} should not be changed locally! ⛔️ "
    exit 0
  fi
}
    
is_branch_has_jira() {
  local branch_with_jira=$(echo "$BRANCH_NAME" | grep "$JIRA_MATCH")
  if [ -z "$branch_with_jira" ]; then
    echo "Branch name: \"$BRANCH_NAME\" does not match JIRA format. Please change it !!! ✏️ "
    exit 1
  fi
}

is_commit_msg_empty() {
  echo "$COMMIT_EDITMSG" &> commit_msg.temp
  local temp_msg=`sed -e '/# Everything below will be removed\./,$ d' \
    -e '/^#/d' \
    -e '/^[[:space:]]*$/d' \
    commit_msg.temp`
  rm commit_msg.temp
  if [ -z "$temp_msg" ]; then
    echo "Commit message should not be Empty! Write Sth about the commit. ✏️ "
    exit 1
  fi
}

is_branch_already_in_commit() {
  local branch_in_commit=$(echo $1 | grep -c "$JIRA_STR")
  if [ $branch_in_commit -ge 1 ]; then
    exit 0
  fi
}

is_branch_empty
is_commit_msg_empty
is_branch_excluded
is_branch_has_jira
is_commit_msg_empty
is_branch_already_in_commit "$COMMIT_EDITMSG"

echo "$JIRA_STR" "$(cat "$1")" > $1

